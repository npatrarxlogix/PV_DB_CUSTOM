CREATE OR REPLACE PROCEDURE P_S_STUDY (
    pi_mode VARCHAR2
) IS

    ln_row_cnt           NUMBER;
    l_seq_num            NUMBER;
    l_stage_sql          CLOB;
    l_etl_execution_id   NUMBER := pvd_cstm_seq.currval;
    l_stg_tab_name       VARCHAR2(4000);
	l_src_tab_name       VARCHAR2(4000);
    l_tgt_tab_name       VARCHAR2(4000);
BEGIN
			
--------------------------------------------------------
--  Populating Table S_ESB_V_STUDY
--------------------------------------------------------

    BEGIN
        l_seq_num := pvd_cstm_table_log.nextval;
        EXECUTE IMMEDIATE 'select STAGE_TABLE_NAME from pvd_cstm_tables where STAGE_POPULATION_PROCEDURE=''P_S_STUDY''' INTO l_stg_tab_name;
		EXECUTE IMMEDIATE 'select SRC_TABLE_NAME from pvd_cstm_tables where STAGE_POPULATION_PROCEDURE=''P_S_STUDY''' INTO l_src_tab_name;
        IF pi_mode = 'INIT' 
		THEN
		l_stage_sql := 'INSERT INTO '||l_stg_tab_name||'
	    (TRIAL_NO,COMPOUND_CODE,AGE_MAXIMUM_ACTUAL,AGE_MAXIMUM_UNITS,AGE_MINIMUM_ACTUAL,AGE_MINIMUM_UNITS,MALE_PARTICIPATION_IND
			,FEMALE_PARTICIPATION_IND,PHASE_CODE,PROJECT_CODE_ALIAS,PROJECT_CODE_NCC,STUDY_CATEGORY_CODE,STUDY_CATEGORY_DESC,STUDY_CODE_ALIAS
			,STUDY_CODE_NCC,STUDY_EID,STUDY_EID_AUTHORITY,TITLE,BLINDING_SCHEMA_CODE,BLINDING_SCHEMA_DESC,DESIGN_CONFIG_CODE,DESIGN_CONFIG_DESC
			,ALLOCATION_CODE,ALLOCATION_DESC,LAST_UPDATED_BY,MANAGING_ORG_EREF,GG_COMMIT_TIME,BATCH,PARTITION
			)
        SELECT
            TRIAL_NO,COMPOUND_CODE,AGE_MAXIMUM_ACTUAL,AGE_MAXIMUM_UNITS,AGE_MINIMUM_ACTUAL,AGE_MINIMUM_UNITS,MALE_PARTICIPATION_IND
			,FEMALE_PARTICIPATION_IND,PHASE_CODE,PROJECT_CODE_ALIAS,PROJECT_CODE_NCC,STUDY_CATEGORY_CODE,STUDY_CATEGORY_DESC,STUDY_CODE_ALIAS
			,STUDY_CODE_NCC,STUDY_EID,STUDY_EID_AUTHORITY,TITLE,BLINDING_SCHEMA_CODE,BLINDING_SCHEMA_DESC,DESIGN_CONFIG_CODE,DESIGN_CONFIG_DESC
			,ALLOCATION_CODE,ALLOCATION_DESC,LAST_UPDATED_BY,MANAGING_ORG_EREF,GG_COMMIT_TIME,BATCH,PARTITION
        FROM
            '||l_src_tab_name
;
        ELSIF pi_mode = 'INCR'
		THEN
		l_stage_sql := 'INSERT INTO '||l_stg_tab_name||'
	    (TRIAL_NO,COMPOUND_CODE,AGE_MAXIMUM_ACTUAL,AGE_MAXIMUM_UNITS,AGE_MINIMUM_ACTUAL,AGE_MINIMUM_UNITS,MALE_PARTICIPATION_IND
			,FEMALE_PARTICIPATION_IND,PHASE_CODE,PROJECT_CODE_ALIAS,PROJECT_CODE_NCC,STUDY_CATEGORY_CODE,STUDY_CATEGORY_DESC,STUDY_CODE_ALIAS
			,STUDY_CODE_NCC,STUDY_EID,STUDY_EID_AUTHORITY,TITLE,BLINDING_SCHEMA_CODE,BLINDING_SCHEMA_DESC,DESIGN_CONFIG_CODE,DESIGN_CONFIG_DESC
			,ALLOCATION_CODE,ALLOCATION_DESC,LAST_UPDATED_BY,MANAGING_ORG_EREF,GG_COMMIT_TIME,BATCH,PARTITION
			)
        SELECT TRIAL_NO,COMPOUND_CODE,AGE_MAXIMUM_ACTUAL,AGE_MAXIMUM_UNITS,AGE_MINIMUM_ACTUAL,AGE_MINIMUM_UNITS,MALE_PARTICIPATION_IND
			,FEMALE_PARTICIPATION_IND,PHASE_CODE,PROJECT_CODE_ALIAS,PROJECT_CODE_NCC,STUDY_CATEGORY_CODE,STUDY_CATEGORY_DESC,STUDY_CODE_ALIAS
			,STUDY_CODE_NCC,STUDY_EID,STUDY_EID_AUTHORITY,TITLE,BLINDING_SCHEMA_CODE,BLINDING_SCHEMA_DESC,DESIGN_CONFIG_CODE,DESIGN_CONFIG_DESC
			,ALLOCATION_CODE,ALLOCATION_DESC,LAST_UPDATED_BY,MANAGING_ORG_EREF,GG_COMMIT_TIME,BATCH,PARTITION FROM (SELECT
            TRIAL_NO,COMPOUND_CODE,AGE_MAXIMUM_ACTUAL,AGE_MAXIMUM_UNITS,AGE_MINIMUM_ACTUAL,AGE_MINIMUM_UNITS,MALE_PARTICIPATION_IND
			,FEMALE_PARTICIPATION_IND,PHASE_CODE,PROJECT_CODE_ALIAS,PROJECT_CODE_NCC,STUDY_CATEGORY_CODE,STUDY_CATEGORY_DESC,STUDY_CODE_ALIAS
			,STUDY_CODE_NCC,STUDY_EID,STUDY_EID_AUTHORITY,TITLE,BLINDING_SCHEMA_CODE,BLINDING_SCHEMA_DESC,DESIGN_CONFIG_CODE,DESIGN_CONFIG_DESC
			,ALLOCATION_CODE,ALLOCATION_DESC,LAST_UPDATED_BY,MANAGING_ORG_EREF,GG_COMMIT_TIME,BATCH,PARTITION,
			ROW_NUMBER() OVER(PARTITION BY STUDY_EID,STUDY_EID_AUTHORITY ORDER BY BATCH DESC) rn
        FROM
            '||l_src_tab_name || ' where batch in(select batch from pvd_temp_batch_tbl)) WHERE rn = 1'
;
        END IF;
        pkg_cstm_obj.p_ins_etl_logging(l_seq_num,l_stg_tab_name,l_etl_execution_id,'POPULATE STAGE TABLE','START',l_stage_sql);
        EXECUTE IMMEDIATE 'TRUNCATE TABLE '||l_stg_tab_name;
        EXECUTE IMMEDIATE l_stage_sql;
        ln_row_cnt := SQL%rowcount;
        pkg_cstm_obj.p_updt_etl_logging(ln_row_cnt,'SUCCESS',l_seq_num);
    EXCEPTION
        WHEN OTHERS THEN
            pkg_cstm_obj.p_ins_exception(l_stg_tab_name,'POPULATE STAGE TABLE',sqlcode,sqlerrm,l_stage_sql);
            pkg_cstm_obj.p_updt_etl_logging(NULL,'FAILED',l_seq_num);
            RAISE;
    END;		   

	
--------------------------------------------------------
--  Populating Table S_ESB_V_ORGANIZATION
--------------------------------------------------------

    BEGIN
        l_seq_num := pvd_cstm_table_log.nextval;
        l_stg_tab_name := 'S_ESB_V_ORGANIZATION';
        IF pi_mode = 'INIT' 
		THEN
        l_stage_sql := 'INSERT INTO s_esb_v_organization(DESCRIPTION,ORGANIZATION_CODE,ORGANIZATION_EID,ORGANIZATION_EID_AUTHORITY,GG_COMMIT_TIME,BATCH,PARTITION)
        SELECT
            DESCRIPTION,ORGANIZATION_CODE,ORGANIZATION_EID,ORGANIZATION_EID_AUTHORITY,GG_COMMIT_TIME,BATCH,PARTITION
        FROM
            esb_v_organization_hist'
;
        ELSIF pi_mode = 'INCR'
		THEN
        l_stage_sql := 'INSERT INTO s_esb_v_organization(DESCRIPTION,ORGANIZATION_CODE,ORGANIZATION_EID,ORGANIZATION_EID_AUTHORITY,GG_COMMIT_TIME,BATCH,PARTITION)
        SELECT
            DESCRIPTION,ORGANIZATION_CODE,ORGANIZATION_EID,ORGANIZATION_EID_AUTHORITY,GG_COMMIT_TIME,BATCH,PARTITION FROM (SELECT
            DESCRIPTION,ORGANIZATION_CODE,ORGANIZATION_EID,ORGANIZATION_EID_AUTHORITY,GG_COMMIT_TIME,BATCH,PARTITION,
			ROW_NUMBER() OVER(PARTITION BY ORGANIZATION_EID,ORGANIZATION_EID_AUTHORITY ORDER BY BATCH DESC) rn
        FROM
            esb_v_organization_hist where batch in(select batch from pvd_temp_batch_tbl)) WHERE rn = 1'
;
        END IF;
        pkg_cstm_obj.p_ins_etl_logging(l_seq_num,l_stg_tab_name,l_etl_execution_id,'POPULATE STAGE TABLE','START',l_stage_sql);
        EXECUTE IMMEDIATE 'TRUNCATE TABLE s_esb_v_organization';
        EXECUTE IMMEDIATE l_stage_sql;
        ln_row_cnt := SQL%rowcount;
        pkg_cstm_obj.p_updt_etl_logging(ln_row_cnt,'SUCCESS',l_seq_num);
    EXCEPTION
        WHEN OTHERS THEN
            pkg_cstm_obj.p_ins_exception(l_stg_tab_name,'POPULATE STAGE TABLE',sqlcode,sqlerrm,l_stage_sql);
            pkg_cstm_obj.p_updt_etl_logging(NULL,'FAILED',l_seq_num);
            RAISE;
    END;	
    COMMIT;
END;
/