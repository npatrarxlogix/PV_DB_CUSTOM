CREATE TABLE S_LM_EVENT_GROUP_TERMS 
   (	TERM_ID NUMBER NOT NULL ENABLE, 
	EG_ID NUMBER NOT NULL ENABLE, 
	PT VARCHAR2(250 CHAR), 
	PT_J VARCHAR2(250 CHAR), 
	PT_CODE VARCHAR2(50 CHAR), 
	SOC VARCHAR2(250 CHAR), 
	SOC_J VARCHAR2(250 CHAR), 
	SOC_CODE VARCHAR2(50 CHAR), 
	LLT VARCHAR2(250 CHAR), 
	LLT_J VARCHAR2(250 CHAR), 
	LLT_CODE VARCHAR2(50 CHAR), 
	LLT_CODE_J VARCHAR2(50 CHAR), 
	HLT VARCHAR2(250 CHAR), 
	HLT_J VARCHAR2(250 CHAR), 
	HLT_CODE VARCHAR2(50 CHAR), 
	HLGT VARCHAR2(250 CHAR), 
	HLGT_J VARCHAR2(250 CHAR), 
	HLGT_CODE VARCHAR2(50 CHAR), 
	TERM_TYPE NUMBER, 
	CODE_DICT NUMBER, 
	CODE_STATUS NUMBER NOT NULL ENABLE, 
	CODE_STATUS_J NUMBER, 
	DELETED DATE, 
	ENTERPRISE_ID NUMBER NOT NULL ENABLE
   );
   
CREATE TABLE S_LM_EVENT_GROUP_SMQ 
   (	SMQ_ID NUMBER NOT NULL ENABLE, 
	SMQ_CODE NUMBER, 
	EG_ID NUMBER NOT NULL ENABLE, 
	CODE_DICT NUMBER, 
	DELETED DATE, 
	ENTERPRISE_ID NUMBER NOT NULL ENABLE
   );
   
   CREATE TABLE LM_EVENT_GROUP_TERMS AS 
   SELECT * FROM S_LM_EVENT_GROUP_TERMS; 
   
   CREATE TABLE LM_EVENT_GROUP_SMQ AS 
   SELECT * FROM S_LM_EVENT_GROUP_SMQ;

UPDATE pvr_etl_stage_table_mapping set hidden = 'N' where tgt_table_name in 
 (
 'S_LM_EVENT_GROUP_TERMS', 'S_LM_EVENT_GROUP_SMQ'
 ); 
 
  UPDATE PVR_CL_VIEW_MASTER_WIDE SET HIDDEN = 'N'
 WHERE TABLE_NAME = 'LM_EVENT_GROUP_TERMS' 
 AND CODE_VIEW_NAME = 'VW_LM_EVENT_GROUP_TERMS'; 
 
 
UPDATE pvr_cl_view_master_xref
   SET hidden = 'N'
 WHERE UPPER (code_view_key) = UPPER ('EVENT_GROUP_SMQ');

COMMIT; 
